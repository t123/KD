<MudElement Class="kd-genericview-header">
    <MudGrid Justify="Justify.FlexStart" Class="kd-mud-grid align-end">
        <MudItem>
            <MudText>@(LastUpdate?.ToString() ?? "Never")</MudText>
        </MudItem>
        @if (OnRefresh.HasDelegate)
        {
            <MudItem >
                <MudIconButton Icon="@Icons.Material.Filled.Refresh" aria-label="refresh" OnClick="@(async (s) => await OnRefresh.InvokeAsync(s))" />
            </MudItem>
        }
        <MudItem>
            <MudIconButton Icon="@Icons.Material.Filled.Download" aria-label="refresh" OnClick="TriggerDownload" />
        </MudItem>
        @if (OnSearch.HasDelegate)
        {
            <MudItem>
                <MudTextField TextChanged="@(async (s) => await OnSearch.InvokeAsync(s))" T="string" />
            </MudItem>
        }
        @if (ChildContent != null)
        {
            @ChildContent
        }
    </MudGrid>
</MudElement>

@code {
    [Parameter]
    public required string Label { get; set; } = string.Empty;

    [Parameter]
    public required DateTime? LastUpdate { get; set; } = null;

    [Parameter]
    public RenderFragment? ChildContent { get; set; }

    [Parameter]
    public EventCallback OnRefresh { get; set; }

    [Parameter]
    public EventCallback<string> OnSearch { get; set; }

    private async Task TriggerDownload(object e)
    {
    }
}