@inherits FluxorComponent

@if (TabState.Value.Tabs.Length > 0)
{
    <MudDynamicTabs CloseTab="CloseTab" @ref="_mdt" Border="true" Class="kd-tab-navigation">
        @foreach (var tab in TabState.Value.Tabs)
        {
            <MudTabPanel ID="@tab" Text="@tab.Name" ShowCloseIcon="true" BadgeData='string.Empty' BadgeDot="true" BadgeColor="@Colour.ToMudBlazor(tab.ContextState.Colour)">
                <GenericView @ref="_genericView" Tab="@tab" />
            </MudTabPanel>
        }
    </MudDynamicTabs>
}

@code {
    private GenericView? _genericView;
    private MudDynamicTabs _mdt;

    [Inject]
    public IState<TabState> TabState { get; set; }

    [Inject]
    public IDispatcher Dispatcher { get; set; }

    protected override void OnInitialized()
    {
        SubscribeToAction<AddTabAction>(TabAdded);
        base.OnInitialized();
    }

    private void TabAdded(AddTabAction action)
    {
        if (TabState.Value.Tabs.Length <= 1)
        {
            return;
        }

        var currentTab = TabState.Value.Tabs.SingleOrDefault(x => x.Name == TabState.Value.CurrentTab?.Name);

        if (currentTab != null)
        {
            _mdt.ActivatePanel(currentTab);
        }
    }

    private void CloseTab(MudTabPanel panel)
    {
        var tab = panel.ID as Tab;

        if (tab == null)
        {
            return;
        }

        Dispatcher.Dispatch(new CloseTabAction(tab));
    }
}
